[{"/mnt/c/Users/Alex/dev/Full-Stack-Developer-Coding-Challenge/frontend/src/index.js":"1","/mnt/c/Users/Alex/dev/Full-Stack-Developer-Coding-Challenge/frontend/src/App.js":"2","/mnt/c/Users/Alex/dev/Full-Stack-Developer-Coding-Challenge/frontend/src/reportWebVitals.js":"3","/mnt/c/Users/Alex/dev/Full-Stack-Developer-Coding-Challenge/frontend/src/components/NavigationBar.js":"4","/mnt/c/Users/Alex/dev/Full-Stack-Developer-Coding-Challenge/frontend/src/containers/HomeContainer.js":"5","/mnt/c/Users/Alex/dev/Full-Stack-Developer-Coding-Challenge/frontend/src/containers/HomePage.js":"6","/mnt/c/Users/Alex/dev/Full-Stack-Developer-Coding-Challenge/frontend/src/components/Signup.js":"7","/mnt/c/Users/Alex/dev/Full-Stack-Developer-Coding-Challenge/frontend/src/components/Login.js":"8","/mnt/c/Users/Alex/dev/Full-Stack-Developer-Coding-Challenge/frontend/src/components/ContactColumns.js":"9","/mnt/c/Users/Alex/dev/Full-Stack-Developer-Coding-Challenge/frontend/src/components/AlertColumns.js":"10","/mnt/c/Users/Alex/dev/Full-Stack-Developer-Coding-Challenge/frontend/src/components/SortingTable.js":"11"},{"size":500,"mtime":1617056718996,"results":"12","hashOfConfig":"13"},{"size":757,"mtime":1617057878726,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1617056718997,"results":"15","hashOfConfig":"13"},{"size":556,"mtime":1617056718994,"results":"16","hashOfConfig":"13"},{"size":3195,"mtime":1617061732604,"results":"17","hashOfConfig":"13"},{"size":1682,"mtime":1617057878727,"results":"18","hashOfConfig":"13"},{"size":1576,"mtime":1617057878727,"results":"19","hashOfConfig":"13"},{"size":1770,"mtime":1617056718993,"results":"20","hashOfConfig":"13"},{"size":386,"mtime":1617056718993,"results":"21","hashOfConfig":"13"},{"size":263,"mtime":1617056718992,"results":"22","hashOfConfig":"13"},{"size":2094,"mtime":1617057878727,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"snfftj",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"26"},"/mnt/c/Users/Alex/dev/Full-Stack-Developer-Coding-Challenge/frontend/src/index.js",[],["48","49"],"/mnt/c/Users/Alex/dev/Full-Stack-Developer-Coding-Challenge/frontend/src/App.js",[],"/mnt/c/Users/Alex/dev/Full-Stack-Developer-Coding-Challenge/frontend/src/reportWebVitals.js",[],"/mnt/c/Users/Alex/dev/Full-Stack-Developer-Coding-Challenge/frontend/src/components/NavigationBar.js",[],"/mnt/c/Users/Alex/dev/Full-Stack-Developer-Coding-Challenge/frontend/src/containers/HomeContainer.js",[],"/mnt/c/Users/Alex/dev/Full-Stack-Developer-Coding-Challenge/frontend/src/containers/HomePage.js",[],"/mnt/c/Users/Alex/dev/Full-Stack-Developer-Coding-Challenge/frontend/src/components/Signup.js",[],"/mnt/c/Users/Alex/dev/Full-Stack-Developer-Coding-Challenge/frontend/src/components/Login.js",[],"/mnt/c/Users/Alex/dev/Full-Stack-Developer-Coding-Challenge/frontend/src/components/ContactColumns.js",[],"/mnt/c/Users/Alex/dev/Full-Stack-Developer-Coding-Challenge/frontend/src/components/AlertColumns.js",[],"/mnt/c/Users/Alex/dev/Full-Stack-Developer-Coding-Challenge/frontend/src/components/SortingTable.js",["50","51"],"import {useMemo,} from 'react'\nimport { useTable, useSortBy} from 'react-table'\n\nconst  SortingTable = (props) => {\n\n    const columns = useMemo(() => props.columns, [])\n    const data = useMemo(() => props.table, [])\n\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow\n        } = useTable({\n            columns,\n            data\n        },\n        useSortBy)\n\n    return (\n        <div className=\"infoTable\">\n            <table {...getTableProps()}>\n                <thead>\n                    {headerGroups.map((headerGroup) => (\n                        <tr {...headerGroup.getHeaderGroupProps()}>\n                            {headerGroup.headers.map((column) => (\n                                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                                    {column.render('Header')}\n                                    <span>\n                                        {column.isSorted ? (column.isSortedDesc ? ' ðŸ”½' : ' ðŸ”¼') : ''}\n                                    </span>  \n                                </th>\n                            ))}      \n                        </tr>\n                    ))}\n                </thead>\n                <tbody {...getTableBodyProps}>\n                    {\n                        rows.map(row => {\n                            prepareRow(row)\n                            return (\n                                <tr {...row.getRowProps()}>\n                                    {\n                                        row.cells.map(cell => {\n                                            return (\n                                                <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                                            )\n                                        })\n                                    } \n                                </tr>\n                            )\n                        })\n                    }\n                </tbody>\n            </table>\n        </div>\n    )\n}\nexport default SortingTable",{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":6,"column":50,"nodeType":"58","endLine":6,"endColumn":52,"suggestions":"59"},{"ruleId":"56","severity":1,"message":"60","line":7,"column":45,"nodeType":"58","endLine":7,"endColumn":47,"suggestions":"61"},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"react-hooks/exhaustive-deps","React Hook useMemo has a missing dependency: 'props.columns'. Either include it or remove the dependency array.","ArrayExpression",["64"],"React Hook useMemo has a missing dependency: 'props.table'. Either include it or remove the dependency array.",["65"],"no-global-assign","no-unsafe-negation",{"desc":"66","fix":"67"},{"desc":"68","fix":"69"},"Update the dependencies array to be: [props.columns]",{"range":"70","text":"71"},"Update the dependencies array to be: [props.table]",{"range":"72","text":"73"},[166,168],"[props.columns]",[214,216],"[props.table]"]