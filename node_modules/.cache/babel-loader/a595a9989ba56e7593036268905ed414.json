{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Alex/dev/Full-Stack-Developer-Coding-Challenge/src/components/SortingTable.js\",\n    _s = $RefreshSig$();\n\nimport { useMemo } from 'react';\nimport { useTable, useSortBy } from 'react-table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SortingTable = props => {\n  _s();\n\n  const columns = useMemo(() => props.columns, []);\n  const data = useMemo(() => props.table, []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  }, useSortBy);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"infoTable\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(column.getSortByToggleProps()),\n            children: [column.render('Header'), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: column.isSorted ? column.isSortedDesc ? 'ðŸ”½' : 'ðŸ”¼' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps,\n        children: rows.map(row => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n            children: row.cells.map(cell => {\n              return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n                children: cell.render('Cell')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 49\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SortingTable, \"r5bYf7+Jg5hVAzZcsos1UwcV6d8=\", false, function () {\n  return [useTable];\n});\n\n_c = SortingTable;\nexport default SortingTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"SortingTable\");","map":{"version":3,"sources":["/mnt/c/Users/Alex/dev/Full-Stack-Developer-Coding-Challenge/src/components/SortingTable.js"],"names":["useMemo","useTable","useSortBy","SortingTable","props","columns","data","table","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","getRowProps","cells","cell","getCellProps"],"mappings":";;;AAAA,SAAQA,OAAR,QAAuB,OAAvB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAmC,aAAnC;;;AAEA,MAAOC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAE7B,QAAMC,OAAO,GAAGL,OAAO,CAAC,MAAMI,KAAK,CAACC,OAAb,EAAsB,EAAtB,CAAvB;AACA,QAAMC,IAAI,GAAGN,OAAO,CAAC,MAAMI,KAAK,CAACG,KAAb,EAAoB,EAApB,CAApB;AAEA,QAAM;AACFC,IAAAA,aADE;AAEFC,IAAAA,iBAFE;AAGFC,IAAAA,YAHE;AAIFC,IAAAA,IAJE;AAKFC,IAAAA;AALE,MAMEX,QAAQ,CAAC;AACTI,IAAAA,OADS;AAETC,IAAAA;AAFS,GAAD,EAIZJ,SAJY,CANhB;AAYA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACI,sBAAWM,aAAa,EAAxB;AAAA,8BACI;AAAA,kBACKE,YAAY,CAACG,GAAb,CAAkBC,WAAD,iBACd,mBAAQA,WAAW,CAACC,mBAAZ,EAAR;AAAA,oBACKD,WAAW,CAACE,OAAZ,CAAoBH,GAApB,CAAyBI,MAAD,iBACrB,mBAAQA,MAAM,CAACC,cAAP,CAAsBD,MAAM,CAACE,oBAAP,EAAtB,CAAR;AAAA,uBACKF,MAAM,CAACG,MAAP,CAAc,QAAd,CADL,eAEI;AAAA,wBACKH,MAAM,CAACI,QAAP,GAAmBJ,MAAM,CAACK,YAAP,GAAsB,IAAtB,GAA6B,IAAhD,GAAwD;AAD7D;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADH;AADL;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA,cADJ,eAeI,sBAAWb,iBAAX;AAAA,kBAEQE,IAAI,CAACE,GAAL,CAASU,GAAG,IAAI;AACZX,UAAAA,UAAU,CAACW,GAAD,CAAV;AACA,8BACI,mBAAQA,GAAG,CAACC,WAAJ,EAAR;AAAA,sBAEQD,GAAG,CAACE,KAAJ,CAAUZ,GAAV,CAAca,IAAI,IAAI;AAClB,kCACI,mBAAQA,IAAI,CAACC,YAAL,EAAR;AAAA,0BAA8BD,IAAI,CAACN,MAAL,CAAY,MAAZ;AAA9B;AAAA;AAAA;AAAA;AAAA,sBADJ;AAGH,aAJD;AAFR;AAAA;AAAA;AAAA;AAAA,kBADJ;AAWH,SAbD;AAFR;AAAA;AAAA;AAAA;AAAA,cAfJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAsCH,CAvDD;;GAAOjB,Y;UAWKF,Q;;;KAXLE,Y;AAwDP,eAAeA,YAAf","sourcesContent":["import {useMemo,} from 'react'\nimport { useTable, useSortBy} from 'react-table'\n\nconst  SortingTable = (props) => {\n\n    const columns = useMemo(() => props.columns, [])\n    const data = useMemo(() => props.table, [])\n\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow\n        } = useTable({\n            columns,\n            data\n        },\n        useSortBy)\n\n    return (\n        <div className=\"infoTable\">\n            <table {...getTableProps()}>\n                <thead>\n                    {headerGroups.map((headerGroup) => (\n                        <tr {...headerGroup.getHeaderGroupProps()}>\n                            {headerGroup.headers.map((column) => (\n                                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                                    {column.render('Header')}\n                                    <span>\n                                        {column.isSorted ? (column.isSortedDesc ? 'ðŸ”½' : 'ðŸ”¼') : ''}\n                                    </span>  \n                                </th>\n                            ))}      \n                        </tr>\n                    ))}\n                </thead>\n                <tbody {...getTableBodyProps}>\n                    {\n                        rows.map(row => {\n                            prepareRow(row)\n                            return (\n                                <tr {...row.getRowProps()}>\n                                    {\n                                        row.cells.map(cell => {\n                                            return (\n                                                <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                                            )\n                                        })\n                                    } \n                                </tr>\n                            )\n                        })\n                    }\n                </tbody>\n            </table>\n        </div>\n    )\n}\nexport default SortingTable"]},"metadata":{},"sourceType":"module"}